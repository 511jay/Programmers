//키패드 누르기
class Solution {
   public String solution(int[] numbers, String hand) {
		String answer = "";
		int[][] pad = {
				{1, 2, 3},
				{4, 5, 6},
				{7, 8, 9},
				{-2, 0, -1}
		};
		int[] rigth_hand = {3, 2}; //#
		int[] left_hand = {3, 0}; //*
		for(int i=0; i<numbers.length; i++) {
			int[] next = findcor(pad, numbers[i]);
			if(numbers[i] == 1 || numbers[i] == 4 || numbers[i] == 7) {
				answer+="L";
				left_hand = next;
			}else if(numbers[i] == 3 || numbers[i] == 6 || numbers[i] == 9) {
				answer+="R";
				rigth_hand = next;
			}else {
				int dis_R = distance(rigth_hand, next);
				int dis_L = distance(left_hand, next);
				if(dis_R>dis_L) {
					answer+="L";
					left_hand = next;
				}else if(dis_R<dis_L) {
					answer+="R";
					rigth_hand = next;
				}else {
					if(hand.equals("right")) {
						answer+="R";
						rigth_hand = next;
					}else if(hand.equals("left")) {
						answer+="L";
						left_hand = next;
					}
				}
			}
		}
        return answer;
    }
	public int distance(int[] start, int[] arrive) {
		int i = Math.abs(start[0]-arrive[0]);
		int j = Math.abs(start[1]-arrive[1]);
		return i+j;
	}
	public int[] findcor(int[][] pad, int num) {
		int[] result = new int[2];
		for(int a=0; a<4; a++) {
			for(int b=0; b<3; b++) {
				if(pad[a][b] == num) {
					result[0] = a;
					result[1] = b;
					break;
				}
			}
		}
		return result;
	}
}