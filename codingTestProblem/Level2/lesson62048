//멀쩡한 사각형
import java.util.ArrayList;
import java.util.Arrays;

class Solution {
    public long solution(int w, int h) {
		long gcd = getGCD(w, h);
		long wh = (long)w*(long)h;
		long answer = wh-(w+h-gcd);
        return answer;
    }

	static int getGCD(int w, int h) {
		int upper_sqrt_w = (int)Math.ceil(Math.sqrt(w));
		int upper_sqrt_h = (int)Math.ceil(Math.sqrt(h));
		ArrayList<Integer> w_list = new ArrayList<Integer>();
		ArrayList<Integer> h_list = new ArrayList<Integer>();
		for(int i=1; i<=upper_sqrt_w; i++) {
			if(w%i == 0) {
				if(i == w/i) {
					w_list.add(i);
				}else {
					w_list.add(i);
					w_list.add(w/i);
				}
			}
		}
		for(int i=1; i<=upper_sqrt_h; i++) {
			if(h%i == 0) {
				if(i == h/i) {
					h_list.add(i);
				}else {
					h_list.add(i);
					h_list.add(h/i);
				}
			}
		}
		int[] arr_w = new int[w_list.size()];
		for(int i=0; i<w_list.size(); i++) arr_w[i] = w_list.get(i);
		int[] arr_h = new int[h_list.size()];
		for(int i=0; i<h_list.size(); i++) arr_h[i] = h_list.get(i);
		Arrays.sort(arr_w);
		Arrays.sort(arr_h);
		int w_idx = arr_w.length-1;
		int h_idx = arr_h.length-1;
		while(true) {
			if(arr_w[w_idx]>arr_h[h_idx]) {
				w_idx--;
			}else if(arr_w[w_idx]<arr_h[h_idx]){
				h_idx--;
			}else {
				break;
			}
		}
		return arr_w[w_idx];
	}
}